@inject AppState AppState
@implements IDisposable

@if (_expenses is object && _expenses.Any())
{
    foreach (var expense in _expenses)
    {
        <StackLayout class="expenseListItem">

            <Label Text="@expense.Description" HorizontalOptions="LayoutOptions.StartAndExpand" />
            <Label Text="@($"- £{expense.Amount}")" />

        </StackLayout>
    }
}
else
{
    <Label class="noExpenses" Text="No expenses recorded" />
}

@code {

    private IReadOnlyList<Expense> _expenses;

    protected override async Task OnInitializedAsync()
    {
        await UpdateState();
        AppState.OnChange += UpdateState;
    }

    public void Dispose() => AppState.OnChange -= UpdateState;

    private async Task UpdateState()
    {
        _expenses = await AppState.GetExpenses();

        StateHasChanged();
    }
}